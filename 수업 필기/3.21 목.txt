3.21 목
조인은 2개 이상의 테이블에 있는 컬럼들을 합쳐서 가상의 테이블을 만들어 조회를 하는데
이 테이블은 물리적으로 합쳐지는게 아니라 select하는 동안만 유지되는 가상의 테이블이다.
=> 여러 테이블에 있는 값들을 조회하고 싶은데 select는 한번만 쓰기위해서 사용한다

소스테이블 : 내가 읽어야되는 메인 정보(테이블)이다.
타켓테이블 : 소스테이블 이외에 필요한 추가정보를 가진 테이블

inner join은 소스.타켓을 잘몰라도 되지만 
outer join은 잘 알고 있어야한다

어떤 연산자를 통해 합치는지에 따라 
equi join(부모-자식(FK) 테이블, = )
non-equi join(업무적으로 묶인 테이블 - 부모/자식 관계 X , =이외에 연산자를 사용 )
선그어져있는게 없는 테이블간의 관계를 말함. 관계는 있는데 fk는 없는 경우에 non-equi join을 사용한다

조인의 종류에 따라
inner join과 outer join으로 나뉘고 outer join은 left outer, right outer, full outer가 있는데 full outer는 mysql에서 지원하지 않는다

inner join은 조건이 맞는 애들끼리만 합치겠다. 부모 테이블에는 있지만 자식에 없는 경우 해당 부모 테이블은 나타나지 않음, 자식에 null값이 있는 경우에도 부모테이블의 프라이머리키에는 없으므로 조인 결과에 나타나지 않음

부서가 있든 없든 모든 직원을 다 보고싶은경우에 outer join을 이용해 없는것은 비워둔채로 합쳐준다.
왼쪽 테이블을 다 보겠다 => left outer join
오른쪽 => outer~
outer join은 한쪽 테이블을 다 나오게 하겠다이다.

둘다 중복된 경우에는 테이블명을 명시해줘야되지만 하나의 테이블에만 있는경우 생략해줘도 똑같은 결과가 나옴.
하지만 좋은 방법은 아니다

use join; 은 이제 db명을 쓰지않으면 join을 쓰겠다는뜻

이너 조인은 뭐가 앞이든 상관없음. 단지 행의 순서만 달라지는 것.그러므로 그냥 내가 중요하다고 생각하는것 먼저쓰기

이퀄연산이 아닌경우에는 
from emp e join salary_grade s on e.salary between s.low_sal and s.high_sal;
이처럼 비교해주는 연산자를 통해 관계를 맺을수있다

같은 테이블을 참조하는것은 말이 안된다. 내가 내 정보를 다 가지고 있는데 뭐하러 참조를?
물리적으로 하나지만 실제로 실행할때에는 두개다.


-------------------------------------------

05_서브쿼리

쿼리 안에 select쿼리를 넣어서 사용하는 것

- where절에 들어가는 연산자가 달라지므로 단일행과 다중행 서브쿼리인지를 구분해야됨
- 뷰를 커리문 안에다가 넣어놧다 => 인라인뷰 , 정렬한것이 예시
- NULL은 이퀄이나 넛이퀄로 하면 그냥 빠진다. is null, is not null로 구분해야됨
- and or가 같이 나오면 and먼저 실행되므로 상황에 따라 괄호 쳐주기

상관 연관 쿼리: 어려우므로 다시한번 정리하기
from 안에 있는 테이블에서 where절을 한행씩 확인하는데 where절안에 서브쿼리가 들어있는 경우.
서브쿼리의 결과값이 값으로 나오게된다. 이때 나온 값과 where절에서 보고있는 한행과의 비교를 통해 적절한지 판단하는 것이다.

비상관은 서브쿼리가 먼저 실행됐었는데
상관은 전체 쿼리가 돌아가는건데 한행을 체크할때 서브쿼리가 실행된다
대신 서브쿼리에서 메인 테이블의 값을 이용해서 한행씩 체크한다


exists 를 쓸때에는 select값은 중요하지않다. where절에서 조회가 되는지 안되는지가 중요하다.
어떤 방식으로 돌아가는지 다시한번 생각해보기
where절에서 사용된 서브쿼리의 값이 있는지 없는지만 계속 확인함. 있으면 바로 중단되고 select의 대상이 됨.


두가지 해보기
-- 주문을 한번도 하지 않은 고객 정보를 조회
-- 한번도 팔린적이 없는 제품