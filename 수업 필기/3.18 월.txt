3.18 월 - 09
상대경로가 편할때는 언제일까
서브디렉토리 아래에 있는 자료들을 쓰고싶을때는 상대경로가 편하다

왜냐하면 현재 디렉토리에서 시작해서 아래에 있는것으로 내려가면 편하기때문인데
현재가 아닌 외부에 있는 디렉토리에서 시작하려면 나간후에 다른 파일로 가야되므로 조금 복잡하기 때문이다

input받는것도 입력 받는것
print해주는것도 출력 해주는것
이런 입출력들은 키보드로부터 주고받는 표준입출력이라고 얘기한다

입출력이란?
프로그램이 외부자원과 연결해 데이터를 입력 받거나 출력하는 작업.
프로그램 -> 외부 == 출력
외부 -> 프로그램 == 입력
데이터가 이동하는 흐름을 스트림이라고한다.
그래서 입력 스트림과 출력 스트림 두가지가 있다

코딩 순서는
파일 열고 데이터를 쓰거나 읽고 파일을 닫는다

연결이란 어떤 파일을 쓸지 정해주는 것. 연결에는 두가지가 있는데 입력을 위한 연결과 출력을 위한 연결이 있다.
그 다음 io작업을 한다. input일때는 읽기 output일때는 쓰기. 작업을 다 한 후에 연결을 끊어준다

연결을 해준다는건 파일을 쓰겠다는건데 다썼으면 연결을 끊어줘야됨. 

파이썬에서 파일을 열어주는 함수는 open()
연결 하나로 input과 output을 다 할수는 없다. 한 연결에 하나씩 두개를 다 하고싶으면 두번 연결해줘야됨

연결은 한번 다읽고 끝이다. 이미 읽은 데이터를 다시 읽고 싶으면 다시 연결해야됨. 이름과 비슷함. 스트림-> 한번 흘러가고 끝이다.

fileexcept 오류가 났을때는 다른 파일명을 오류처리해준다. try-except처리해서 익셉션 처리.


파일명.readline()으로 끝까지 다 읽어 읽을 것이 없을 경우 (EOF - end of file) 빈 문자열을 반환한다.

readline => 한줄씩 읽기
readlines => 전체를 다 읽는데 한줄씩 끊어서 리스트에 담아준다

연결하고 읽고 쓰는것은 상황에 따라 달라지지만 연결 끊는것은 close()로 변하지 않는다.

with block
exception에서 as 쓰듯이 사용
with블럭을 빠져나올때 알아서 close()를 실행해준다.

글자는 2byte이므로 각각 다른 바이트에 저장되어있어서 프로그램에서 사용할때 이 두 바이트를 어떻게 붙여서 사용할지를 정하는 방식이 여러가지가 있다.  그중하나가 utf-8. 한글뿐아니라 다른나라언어도 지원돼서 많이 사용함.


워드는 메모장에서 안보임 ->자기만의 방법이 있음 -> 바이너리 파일
텍스트 파일이 다 읽을수있으므로 주고받을때 쓰기 좋다

binary - string을 제외한 나머지

f.write()에 다양한 타입의 데이터가 들어가는데 내가 만든 타입의 데이터를 인식할 수 있을까?
없다 -> 그래서 bytes 타입으로 변환해서 사용한다 => 실제 바이트 타입을 전달해준다

int, float, image 데이터를 bytes 타입으로 변환해 파일에 저장해둔다. 
파일을 읽을때에는 적힌 bytes타입을 가져와 다시 각자의 타입으로 변환해줘서 값을 사용하게된다

모든 타입의 데이터를 바이너리 타입으로 입출력할수 있도록 도와주는것이 pickle
조금어렵게 말하면 객체 직렬화. 파이썬의 모든 데이터는 객체이다.

pickle을 사용하려면 import는 해줘야됨

출력할수있는 메소드를 가진 객체를 넘겨줘야됨 = fo를 넘겨줌

질문 : 피클로 만들었는데 출력할때 맨위 하나만 출력된다. 왜그런건가

os.path.join으로 파일경로를 합칠수있다.

<<< if __name__ == '__main__' 은 모듈로 사용할때 넣어줘야됨. 안그러면 import할때마다 실행되므로
언제 써야되는지 더 알아보기 >>>

