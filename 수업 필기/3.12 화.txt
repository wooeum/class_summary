1. git에 대해서

git pull
코드 작성(수정)
git add .
git commit -m "메세지"
git push
git status 

------------------------------------------------------------------------------------
2. 03_자료구조

자료구조는 여러 개의 값들을 모아서 관리하는 데이터 타입

리스트와 튜플은 모으는 방식이 비슷하다.
순서가 있다 그러면 인덱스이다. 중복된 값을 모으는 것도 가능하다
튜플은 값들을 변경하지 못한다는 차이점이 있다.

항목별로 분류할때 리스트와 튜플은 불편하다
그래서 딕셔너리의 키를 통해 편하게 분류할 수 있다. key-value쌍으로 저장. 그래서 순서는 상관없음

sorted(자료구조)를 해주면 정렬결과를 새로운 리스트로 반환

튜플 - 값 못바꿈 , 값을 소괄호에 넣는다 (소괄호는 생략 가능), 원소가 하나인 튜플을 만들때는 ,를 붙여준다
f2 = dict(사과=10, 귤=20, 수박=5)   => 이때는 따움표를 안써야됨

f1['사과'], f1.get('사과')  => 두개의 결과는 같지만
딕셔너리에 없는 키값이 들어올 경우가 다르다 앞에꺼는 오류가 나지만 뒤에꺼는 default값(None)을 반환 콤마뒤에 반환할 값을 정할수있음

빼고싶을떈 pop   => 삭제하면서 value를 반환해줌

!!!! list에 넣는거는 왜 안되는거지

subscriptable 은 인덱스로 조회하는 애들. set은 인덱스로 위치를 찾을수없음

남이 준값을 넣어야되는데 리스트값을 준 경우에는 리스트 대입을 한다. 하지만 일반적인 경우에는 튜플대입을 함


#타입 힌트
만약에 age = 10 이라는 변수를 선언하는데 여기에 정수만 넣었으면 좋겠다면  
age:int = 10 이런식으로 해준다
name:"이름" = "홍길동"  => 이런식으로 변수 설명도 가능하다

set은 리스트가 많은 가지고있을떄 고유한 값을 알고싶을때에도 사용가능 => 중복을 제거해주므로 고유한값 확인 가능

모여있는것들은 iterable 타입.

------------------------------------------------------------------------------------------
04_제어문_~

코드 블럭을 비울 수 없는데. 비워놓고 싶으면 pass를 사용! 틀을 만들때에 자주 사용

if city == 서울 이면 특별시 출력
elif city == 울산 부산 광주 인천 .... 일때 일일히 할필요없이
elif city in ['울산', '부산', '광주', '인천'] 이렇게 표현 가능


l = [1, 10, 20, 5, 7]
enumerate는 인덱스를 달아주는 함수
for value in enumerate(l):
	print(value)  해주면

(0, 1)
(1, 10)
(2, 20)
(3, 5)
(4, 7) 이렇게 출력됨


for index, value in enumerate(l):   => 이거도 가능
zip은 여러개의 자료구조 안에서 같은 인덱스로 묶어줄때 사용

ㅣ = list(range(1, 101))  => 이런 방식도 가능