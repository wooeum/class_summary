3.11 월

1. 주피터 노트북 여는 과정
1) 해당 디렉토리로 이동    classes\01_python
2) 가상환경 활성화     env\scripts\activate.bat
3) jupyter notebook or lab 입력


프로젝트를 만들때
.git이라는 저장소를 만들고 바뀐 버전을 다 저장하고 이 곳을 로컬저장소라고 한다 (원격도 지원)
깃은 서버를 만든후 로컬에 저장해두고 원격에 똑같이 저장해 둘 수 있다


2. git에 대해서

git hub 복제해오기
git clone 깃허브 주소

git pull - 원격 저장소의 내용을 받기

git add - 관리대상 파일을 지정     => 관리가 필요없는 파일도 있는데 관리가 필요한 파일만 add해준다
	    				 	    git add .    =   현재 위치한 대상 모두 다 관리 대상이야

add 하면 staged상태이고 staged상태인 것들을 commit하면 버전이 등록된다

git commit - 버전 등록
커밋은 수정이 끝나 실행이 될때, 수정이 안끝났는데 저장하고싶으면 add까지만

git push - 원격 저장소에 올리기
지금까지 커밋한 내용들을 원격 저장소에 올려 동기화시킴


마크다운 로직 알면좋음!!

a 셀 위에 추가
b 셀 아래에 추가b
삭제는 dd, x
markdown cell : m
code cell : y


3. 01_개요

compile 번역  interpret 통역

컴파일은 os마다 사용하는 기계어가 다르다


동적타입은 프로그램이 커지면 단점이 생긴다는데 왜그럴까?
타입을 고정하지 않는데에서 오는 문제점은 무엇이있을까

REPL - 대화형   => 터미널에서 실행하는 방식
scripts - 스크립트 형식으로 한번에 실행  => 보통의 방식
한문장씩 실행하는건 똑같다, 작성하는 방식의 차이이다.


4. 02_변수와 데이터타입

표현식(expression) - 값을 표현하는 구문
리터럴 : 표현식 자체가 값인 경우

파이썬은 변수를 선언하면서 값을 넣어줘야됨

ctrl + / 는 주석처리
여러 줄을 드래그해서 ctrl + / 해주면 여러줄 동시에 주석처리됨

a, b, c = 10, 20, 30  이러한 형태를 튜플대입이라고 한다


숫자를 표기할때 _ 로 구분자를 넣을 수 있다
 ex)   i = 100_000_000

파이썬에서 input으로 값을 입력받아줬을때의 값은 문자열이다.
정수로 바꿔주고싶으면 
a = int(a) 과 같이 바꿔줘야됨


<예시>
a = int(input("숫자:"))
>>> 숫자: -6  , 0
result = "양수" if a > 0 else "음수" if a < 0 else "영" ----------> 이 표현법 알아두기
print(result)
>>>  음수, 영

1비트는 하나가 들어갈 수 있는 공간 0 or 1

멀티커서 = ctrl하고 마우스로 클릭  => 같은 동작을 여러번 반복할떄 사용하면 좋음


print("c:\\source\\backup\\test\\b.txt")
print(r"c:\source\backup\test\b.txt")
위 두 명령어의 결과는 같다. r 는 \를 문자 그대로 사용하겠다 (escape문자 사용하지 않겠다)

문자열 안에 있는 값들은 못바꾼다
txt[0] = '가'   => 첫번쨰 글자를 '가'로 바꾸려했지만 문자열은 안에 있는 값을 못바꾸므로 변경 불가능


playholder로 %d를 요즘은 많이 사용하지 않는다. 그러면 format으로 해야되는건가?
두 개의 차이점을 알아보고 사용형태 다시 공부하기
%d를 넣는것은 playholder에 데이터의 타입까지 확인해주는 것

메소드와 함수의 차이점?!
함수는 처리할값을 괄호 안에 넣어서 처리함
하지만 메소드는   > 처리할값.함수() < 이런식으로 표현함
왜 이렇게 하는지는 객체지향에 대해서 배우면 알게될것이다.
객체지향이랑 무슨 연관이 있는지 알아봐야겠다

함수는 여러 타입에서 사용가능하지만 메소드는 해당하는 한 타입만 처리 가능하다. string 주요 메소드는 문자열만 처리 가능

endswith(".com")  이런식으로 사용가능
url을 받아와서 어떻게 끝나는지 확인하는 코드

